"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/llm/type.ts
var type_exports = {};
__export(type_exports, {
  LLMError: () => LLMError,
  LLMErrorType: () => LLMErrorType
});
module.exports = __toCommonJS(type_exports);
var LLMErrorType = /* @__PURE__ */ ((LLMErrorType2) => {
  LLMErrorType2["Aborted"] = "Aborted";
  LLMErrorType2["Generic"] = "Generic";
  return LLMErrorType2;
})(LLMErrorType || {});
var LLMError = class extends Error {
  constructor({
    message,
    tokens,
    completed,
    type
  }) {
    super(message);
    this.tokens = tokens;
    this.completed = completed;
    this.type = type;
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  LLMError,
  LLMErrorType
});
//# sourceMappingURL=type.cjs.map